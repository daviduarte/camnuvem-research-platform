- Implementation of pretext task and downstream task
- Pretext task has 3 fully connected layers (512, 128, FEA_DIM_OUT)
		fc1 = self.relu(self.fc1(inputs))
		fc2 = self.relu(self.fc2(fc1))
		fc3 = self.relu(self.fc3(fc2))

- Downstream task has 3 layers (512, 1024, 1)
		fc1 = self.relu(self.fc1(inputs))
		fc2 = self.relu(self.fc2(fc1))
		fc3 = self.sigmoid(self.fc3(fc2))

- We use the pretext model prunned in the downstram task, so we get N objects in T frames each (window) in the downstram and 
pretext task. 
- There is a control of stride in the pretext task and the training of downstream task, but the downstream
task has to have stride = 1.

